/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.CountryController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Country;
import model.Employee;
import model.Location;
import model.Region;
import tools.Connections;

/**
 *
 * @author Andi SR
 */
public class CountriesView extends javax.swing.JInternalFrame {

    Connections con = new Connections();
    CountryController Cr = new CountryController(con.getConnection());

    /**
     * Creates new form CountriesView
     */
    public CountriesView() {
        initComponents();
        String regionId;
        reset();
        Binding(Cr.getAll());
        selectRegionId();
//        int baris = tableCountry.getRowCount();
//        for (int a = 0; a < baris; a++) {
//            String nomor = String.valueOf(a + 1);
//            tableCountry.setValueAt(nomor, a, 0);
//        }

        try {
            for (Country country : Cr.selectCountry()) {
                regionId = String.valueOf(country.getRegionId());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "selectCountry is " + e.getMessage());
        }
    }

    public void reset() {
        txtCountryId.setText("");
        txtCountryName.setText("");
        //txtRegionId.setText("");
        txtSearch.setText("");
        ComboBoxRegionId.setSelectedItem("0");

        Binding(Cr.selectCountry());
    }
//
//    public void noTable() {
//        int baris = tableCountry.getRowCount();
//        for (int a = 0; a < baris; a++) {
//            String nomor = String.valueOf(a + 1);
//            tableCountry.setValueAt(nomor + ".", a, 0);
//        }
//        return;
//
//    }

    public void Binding(List<Country> countrys) {
        Object[] header = {"No.", "Country ID", "Country Name", "Region ID"};
        DefaultTableModel data = new DefaultTableModel(null, header);
        tableCountry.setModel(data);
        int no =1;
        try {
            for (Country country : countrys) {
                String isi1 = String.valueOf(no);
                String isi2 = country.getCountryId();
                String isi3 = country.getCountryName();
                String isi4 = String.valueOf(country.getRegionId());
                String kolom[] = { isi1,isi2, isi3,isi4};

                data.addRow(kolom);
                no++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ckck" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCountryId = new javax.swing.JTextField();
        txtCountryName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCountry = new javax.swing.JTable();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        ComboBoxRegionId = new javax.swing.JComboBox<>();
        btnReset = new javax.swing.JButton();

        setTitle("Countries View");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Country ID");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Country Name");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Region ID");

        tableCountry.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tableCountry.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tableCountry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Country ID", "Country Name", "Region ID"
            }
        ));
        tableCountry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCountryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCountry);

        btnInsert.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertMouseClicked(evt);
            }
        });
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        ComboBoxRegionId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Region ID" }));
        ComboBoxRegionId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboBoxRegionIdMouseClicked(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCountryId, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCountryName)
                            .addComponent(ComboBoxRegionId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearch)
                        .addComponent(txtCountryId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCountryName, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxRegionId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableCountryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCountryMouseClicked
        // TODO add your handling code here:
        int row = tableCountry.getSelectedRow();
        int column = tableCountry.getSelectedColumn();
        String data = tableCountry.getValueAt(row, column).toString();
       // String countryId = tableCountry.getValueAt(row, 0).toString();
        String countryId = tableCountry.getValueAt(row, 1).toString();
        String countryName = tableCountry.getValueAt(row, 2).toString();
        String idRegion = tableCountry.getValueAt(row, 3).toString();


        txtCountryId.setText(countryId);
//        txtCountryId.setEditable(false);
        txtCountryName.setText(countryName);
        //  txtRegionId.setText(idRegion);
        ComboBoxRegionId.setSelectedItem(idRegion);

    }//GEN-LAST:event_tableCountryMouseClicked

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed

    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String countryId = txtSearch.getText();
        String countryName = txtSearch.getText();
        String regionId = (String) txtSearch.getText();

        Object[] header = {"No.", "Country ID", "Country Name", "Region ID"};
        DefaultTableModel data = new DefaultTableModel(null, header);
        tableCountry.setModel(data);

        String object = txtSearch.getText();
        if (countryId.equals("") && countryName.equals("") && regionId.equals("")) {
            JOptionPane.showMessageDialog(null, "Form tidak boleh kosong");
        } else {
            for (Country country : Cr.search(object)) {
                String isi1 = country.getCountryId();
                String isi2 = country.getCountryName();
                String isi3 = String.valueOf(country.getRegionId());

                String kolom[] = {isi1, isi2, isi3};
                data.addRow(kolom);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnInsertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        String idCountry = txtCountryId.getText();
        String nameCountry = txtCountryName.getText();
        // String idRegion = txtRegionId.getText();

        String idRegion = (String) ComboBoxRegionId.getSelectedItem();
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Tambah Data Country ?",
                "Tambah Data Country", dialogButton);

        if (Cr.insert(idCountry, nameCountry, idRegion) == true) {
            JOptionPane.showMessageDialog(null, "Tambah Data Country Berhasil");
            Binding(Cr.getAll());
        } else {
            JOptionPane.showMessageDialog(null, "Insert Country Gagal");
        }
    }//GEN-LAST:event_btnInsertMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        // TODO add your handling code here:
        String idCountry = txtCountryId.getText();
        String nameCountry = txtCountryName.getText();
        // String idRegion = txtRegionId.getText();
        String idRegion = (String) ComboBoxRegionId.getSelectedItem();

        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Update Data Country ?",
                "Update Data Country", dialogButton);

        if (Cr.update(idCountry, nameCountry, idRegion) == true) {
            JOptionPane.showMessageDialog(null, "Update Country Berhasil");
            Binding(Cr.getAll());
        } else {
            JOptionPane.showMessageDialog(null, "Update Country Gagal");
        }
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Hapus Data ?",
                "Hapus Data", dialogButton);
        if (txtCountryId != null) {
            if (Cr.delete(txtCountryId.getText()) == true) {
                JOptionPane.showMessageDialog(null, "Data dengan ID : " + txtCountryId.getText() + " Berhasil Dihapus");
                Binding(Cr.getAll());
            } else {
                JOptionPane.showMessageDialog(null, "Gagal Menghapus Data");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Form input tidak boleh kosong");
        }

    }//GEN-LAST:event_btnDeleteMouseClicked

    private void ComboBoxRegionIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxRegionIdMouseClicked
        // TODO add your handling code here:
        //  txtRegionId.setText(String.valueOf(ComboBoxRegionId));
        // ComboBoxRegionId.setSelectedItem(txtRegionId);
    }//GEN-LAST:event_ComboBoxRegionIdMouseClicked

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetMouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnResetActionPerformed

    public void selectRegionId() {
        String regionId;
        try {
            for (Region region : Cr.selectRegionId()) {
                regionId = String.valueOf(region.getRegionId());
                ComboBoxRegionId.addItem(regionId);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "selectRegionId is " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxRegionId;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCountry;
    private javax.swing.JTextField txtCountryId;
    private javax.swing.JTextField txtCountryName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
