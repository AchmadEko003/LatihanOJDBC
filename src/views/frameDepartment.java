/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.DepartmentController;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Department;
import model.Employee;
import model.Location;
import tools.Connections;

/**
 *
 * @author Genius
 */
public class frameDepartment extends javax.swing.JFrame {
    Connections con = new Connections();
    DepartmentController dc = new DepartmentController(con.getConnection());
    
    /**
     * Creates new form frameDepartment
     */
    public frameDepartment() {
        initComponents();
        selectEmployeeId();
        selectLocatoId();
    }
    
    /**
     * select employee id for combo box manager id
     */
    public void selectEmployeeId() {
        String employeeId;
        try {
            for (Employee employee : dc.selectEmployeeId()) {
                employeeId = String.valueOf(employee.getEmployeeId());
                comboManagerId.addItem(employeeId);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "selectEmployeeId is " + e.getMessage());
        }
    }
    
    /**
     * select locationid for combo box location id
     */
    public void selectLocatoId() {
         String locationId;
        try {
            for (Location location : dc.selectLocationId()) {
                locationId = String.valueOf(location.getLocationId());
                comboLocationId.addItem(locationId);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "selectLocationId is " + e.getMessage());
        }
    }
    
    /**
     * select all department
     */
    public void selectDepartmentAll() {
        Object[] header = {"Department ID", "Department Name", "Manager ID", "Location ID"};
        DefaultTableModel data = new DefaultTableModel(null, header);
        tableDepartment.setModel(data);
        
        try {
            for (Department department : dc.selectDepartment()) {
                String isi1 = String.valueOf(department.getDepartmentId());
                String isi2 = department.getDepartmentName();
                String isi3 = String.valueOf(department.getManagerId());
                String isi4 = String.valueOf(department.getLocationId());

                String kolom[] = {isi1, isi2, isi3, isi4};
                data.addRow(kolom);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Oops! : " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDepartment = new javax.swing.JPanel();
        buttonUpdate = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonSelect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDepartment = new javax.swing.JTable();
        buttonSelectId = new javax.swing.JButton();
        buttonSearch = new javax.swing.JButton();
        labelDepartmentId = new javax.swing.JLabel();
        labelDepartmentName = new javax.swing.JLabel();
        labelManagerId = new javax.swing.JLabel();
        labelLocationId = new javax.swing.JLabel();
        textDepartmentId = new javax.swing.JTextField();
        textDepartmentName = new javax.swing.JTextField();
        comboManagerId = new javax.swing.JComboBox<>();
        comboLocationId = new javax.swing.JComboBox<>();
        buttonInsert = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();
        textSearch = new javax.swing.JTextField();
        textSelectId = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        menuDepartment = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new java.awt.CardLayout());

        buttonUpdate.setText("Update");
        buttonUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonUpdateMouseClicked(evt);
            }
        });

        buttonDelete.setText("Delete");
        buttonDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonDeleteMouseClicked(evt);
            }
        });
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonSelect.setText("Select");
        buttonSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSelectMouseClicked(evt);
            }
        });

        tableDepartment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Department ID", "Department Name", "Manager ID", "Location ID"
            }
        ));
        tableDepartment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDepartmentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableDepartment);

        buttonSelectId.setText("Select ID");
        buttonSelectId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSelectIdMouseClicked(evt);
            }
        });
        buttonSelectId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectIdActionPerformed(evt);
            }
        });

        buttonSearch.setText("Search");
        buttonSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSearchMouseClicked(evt);
            }
        });
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        labelDepartmentId.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        labelDepartmentId.setText("Department ID");

        labelDepartmentName.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        labelDepartmentName.setText("Department Name");

        labelManagerId.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        labelManagerId.setText("Manager ID");

        labelLocationId.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        labelLocationId.setText("Location ID");

        comboManagerId.setToolTipText("");

        buttonInsert.setText("Insert");
        buttonInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonInsertMouseClicked(evt);
            }
        });

        buttonReset.setText("Reset Form");
        buttonReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonResetMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelDepartmentLayout = new javax.swing.GroupLayout(panelDepartment);
        panelDepartment.setLayout(panelDepartmentLayout);
        panelDepartmentLayout.setHorizontalGroup(
            panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDepartmentLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelDepartmentLayout.createSequentialGroup()
                        .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDepartmentId)
                            .addComponent(labelDepartmentName)
                            .addComponent(labelManagerId)
                            .addComponent(labelLocationId))
                        .addGap(42, 42, 42)
                        .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textDepartmentId)
                            .addComponent(textDepartmentName)
                            .addComponent(comboManagerId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelDepartmentLayout.createSequentialGroup()
                                .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelDepartmentLayout.createSequentialGroup()
                                        .addComponent(buttonSelect)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buttonInsert)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buttonUpdate))
                                    .addComponent(textSelectId))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelDepartmentLayout.createSequentialGroup()
                                        .addComponent(buttonSelectId)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buttonSearch)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(panelDepartmentLayout.createSequentialGroup()
                                        .addComponent(buttonDelete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(buttonReset))))
                            .addComponent(comboLocationId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDepartmentLayout.setVerticalGroup(
            panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDepartmentLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDepartmentId)
                    .addComponent(textDepartmentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDepartmentName)
                    .addComponent(textDepartmentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelManagerId)
                    .addComponent(comboManagerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelLocationId)
                    .addComponent(comboLocationId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDepartmentLayout.createSequentialGroup()
                        .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonInsert)
                            .addComponent(buttonUpdate)
                            .addComponent(buttonDelete)
                            .addComponent(buttonSelect))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(panelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonSearch)
                            .addComponent(buttonSelectId)
                            .addComponent(textSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSelectId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDepartmentLayout.createSequentialGroup()
                        .addComponent(buttonReset)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(panelDepartment, "card2");

        menuDepartment.setText("Department");
        menuDepartment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuDepartmentMouseClicked(evt);
            }
        });
        menuBar.add(menuDepartment);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSelectMouseClicked
        // TODO add your handling code here:
        selectDepartmentAll();
    }//GEN-LAST:event_buttonSelectMouseClicked

    private void buttonInsertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonInsertMouseClicked
        // TODO add your handling code here:
        String idDepartment = textDepartmentId.getText();
        String nameDepartment = textDepartmentName.getText();
        String idManager = (String) comboManagerId.getSelectedItem();
        String idLocation = (String) comboLocationId.getSelectedItem();
        
        if (!idDepartment.equals("") && !nameDepartment.equals("") && !idManager.equals("") && !idLocation.equals("")) {
            if (dc.insertDepartment(idDepartment, nameDepartment, idManager, idLocation) == true) {
                JOptionPane.showMessageDialog(null, "Insert departmen berhasil");
            } else {
                JOptionPane.showMessageDialog(null, "Insert departmen gagal");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Form input tidak boleh kosong");
        }
        
        selectDepartmentAll();
    }//GEN-LAST:event_buttonInsertMouseClicked
    
    private void tableDepartmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDepartmentMouseClicked
        // TODO add your handling code here:
        int baris = tableDepartment.getSelectedRow();
        int kolom = tableDepartment.getSelectedColumn();
        String dataTerpilih = tableDepartment.getValueAt(baris, kolom).toString();
        String idDepartment = tableDepartment.getValueAt(baris, 0).toString();
        String nameDepartment = tableDepartment.getValueAt(baris, 1).toString();
        String idManager = tableDepartment.getValueAt(baris, 2).toString();
        String idLocation = tableDepartment.getValueAt(baris, 3).toString();

        //set from
        textDepartmentId.setEditable(false);
        textDepartmentId.setText(idDepartment);
        textDepartmentName.setText(nameDepartment);
        comboManagerId.setSelectedItem(idManager);
        comboLocationId.setSelectedItem(idLocation);
    }//GEN-LAST:event_tableDepartmentMouseClicked

    private void buttonUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonUpdateMouseClicked
        // TODO add your handling code here:
        String idDepartment = textDepartmentId.getText();
        String nameDepartment = textDepartmentName.getText();
        String idManager = (String) comboManagerId.getSelectedItem();
        String idLocation = (String) comboLocationId.getSelectedItem();
        
        if (!idDepartment.equals("") && !nameDepartment.equals("") && !idManager.equals("") && !idLocation.equals("")) {
            if (dc.updateDepartment(nameDepartment, idManager, idLocation, idDepartment) == true) {
                JOptionPane.showMessageDialog(null, "Update departmen berhasil");
            } else {
                JOptionPane.showMessageDialog(null, "Update departmen gagal");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Form input tidak boleh kosong");
        }
        
        selectDepartmentAll();
    }//GEN-LAST:event_buttonUpdateMouseClicked

    private void buttonDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonDeleteMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_buttonDeleteMouseClicked

    private void buttonSelectIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSelectIdMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_buttonSelectIdMouseClicked

    private void buttonSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSearchMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_buttonSearchMouseClicked

    private void buttonResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonResetMouseClicked
        // TODO add your handling code here:
        textDepartmentId.setEditable(true);
        textDepartmentId.setText("");
        textDepartmentName.setText("");
        textSearch.setText("");
        textSelectId.setText("");
    }//GEN-LAST:event_buttonResetMouseClicked

    private void menuDepartmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuDepartmentMouseClicked
        // TODO add your handling code here:
        panelDepartment.setVisible(false);
    }//GEN-LAST:event_menuDepartmentMouseClicked

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        /**
         * execute delete function with parameter got from textfield values
         */
        if(textDepartmentId!=null){
            if(dc.deleteDepartment(textDepartmentId.getText())==true){
                JOptionPane.showMessageDialog(null, "Data dengan id = " + textDepartmentId.getText()+" berhasil dihapus");
            }
            else{
                JOptionPane.showMessageDialog(null, "Gagal menghapus data!");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Form input tidak boleh kosong");
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonSelectIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectIdActionPerformed
         /**
         * execute searchDepartment using parameter which got from texfield values
         */
        Object[] header = {"Department ID", "Department Name", "Manager ID", "Location ID"};
        DefaultTableModel data = new DefaultTableModel(null, header);
        tableDepartment.setModel(data); 
        try {
            for (Department department : dc.getById(textSelectId.getText())) {
                String isi1 = String.valueOf(department.getDepartmentId());
                String isi2 = department.getDepartmentName();
                String isi3 = String.valueOf(department.getManagerId());
                String isi4 = String.valueOf(department.getLocationId());

                String kolom[] = {isi1, isi2, isi3, isi4};
                data.addRow(kolom);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Oops! : " + e.getMessage());
        }
    }//GEN-LAST:event_buttonSelectIdActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        /**
         * execute search input
         */
        Object[] header = {"Department ID", "Department Name", "Manager ID", "Location ID"};
        DefaultTableModel data = new DefaultTableModel(null, header);
        tableDepartment.setModel(data);
        
        try {
            for (Department department : dc.searchDepartment(textSearch.getText())) {
                String isi1 = String.valueOf(department.getDepartmentId());
                String isi2 = department.getDepartmentName();
                String isi3 = String.valueOf(department.getManagerId());
                String isi4 = String.valueOf(department.getLocationId());

                String kolom[] = {isi1, isi2, isi3, isi4};
                data.addRow(kolom);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Oops! : " + e.getMessage());
        }
    }//GEN-LAST:event_buttonSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameDepartment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameDepartment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameDepartment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameDepartment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameDepartment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonInsert;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonSelect;
    private javax.swing.JButton buttonSelectId;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JComboBox<String> comboLocationId;
    private javax.swing.JComboBox<String> comboManagerId;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelDepartmentId;
    private javax.swing.JLabel labelDepartmentName;
    private javax.swing.JLabel labelLocationId;
    private javax.swing.JLabel labelManagerId;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuDepartment;
    private javax.swing.JPanel panelDepartment;
    private javax.swing.JTable tableDepartment;
    private javax.swing.JTextField textDepartmentId;
    private javax.swing.JTextField textDepartmentName;
    private javax.swing.JTextField textSearch;
    private javax.swing.JTextField textSelectId;
    // End of variables declaration//GEN-END:variables
}
